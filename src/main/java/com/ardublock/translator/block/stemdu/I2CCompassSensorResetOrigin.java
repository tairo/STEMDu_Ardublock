package com.ardublock.translator.block.stemdu;

import com.ardublock.translator.Translator;
import com.ardublock.translator.block.TranslatorBlock;
import com.ardublock.translator.block.exception.SocketNullException;
import com.ardublock.translator.block.exception.SubroutineNotDeclaredException;

public class I2CCompassSensorResetOrigin extends TranslatorBlock {
	public I2CCompassSensorResetOrigin(Long blockId, Translator translator) {
		super(blockId, translator);
		// TODO Auto-generated constructor stub
	}

	public I2CCompassSensorResetOrigin(Long blockId, Translator translator,
			String codePrefix, String codeSuffix) {
		super(blockId, translator, codePrefix, codeSuffix);
		// TODO Auto-generated constructor stub
	}

	public I2CCompassSensorResetOrigin(Long blockId, Translator translator,
			String codePrefix, String codeSuffix, String label) {
		super(blockId, translator, codePrefix, codeSuffix, label);
		// TODO Auto-generated constructor stub
	}

	private final static String i2ccompassFunction = "float ardublockI2CCompassSensorReadCodeAutoGeneratedReturnCM(int mode, int flag){\n  MagnetometerScaled scaled = HMC5883L_compass.ReadScaledAxis();\n  float heading = atan2(scaled.YAxis, scaled.XAxis);\n  if(flag == 1){\n  	heading = heading - HMC5883L_headingOrigin;\n    if(heading < 0) heading += 2*PI;\n    if(heading > 2*PI) heading -= 2*PI;\n  }\n  if(mode == 0){  	return heading*180/M_PI;  }  else{  	return heading;  }\n}\n";	@Override
	public String toCode() throws SocketNullException,
			SubroutineNotDeclaredException {
		// TODO Auto-generated method stub

		translator.addHeaderFile("HMC5883L.h");
		String definitionCode = "HMC5883L HMC5883L_compass;\nint HMC5883L_error;\nfloat HMC5883L_headingOrigin;\n";
		translator.addDefinitionCommand(definitionCode);
		translator.addDefinitionCommand(i2ccompassFunction);
		
		String ret = "HMC5883L_headingOrigin = ardublockI2CCompassSensorReadCodeAutoGeneratedReturnCM(1, 0);\n";
		return ret;

	}
}
